// Copyright [2023] <Phylis Crystobal, Morris Roggo>
#include "unit_tests.h"

#include <vector>

TEST(GeneralSuite, test_1) {
  s21::ModelGraph model(2, 0.1, 26);

  model.train(3, "../datasets/emnist-letters-train.csv",
              "../datasets/emnist-letters-test.csv");
  int letter_a[784] = {
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   4,   21,  20,  1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   33,  115,
      172, 153, 20,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   8,   127, 221, 253, 254, 215,
      37,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   1,   22,  95,  244, 254, 254, 247, 154, 20,  0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   35,  159, 232, 254, 254, 244, 163, 22,  1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      35,  163, 245, 254, 253, 221, 127, 33,  0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   35,  219, 253,
      254, 246, 127, 33,  1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   7,   47,  164, 253, 254, 247, 164,
      10,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   10,  91,  207, 247, 254, 254, 220, 52,  0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   123, 221, 253, 254, 254, 252, 172, 21,  0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   20,
      52,  231, 254, 254, 254, 254, 245, 115, 4,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   34,  96,  218, 250, 254,
      246, 196, 237, 254, 217, 39,  0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   3,   36,  202, 234, 253, 254, 244, 163, 73,
      218, 254, 215, 37,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   2,   65,  175, 253, 254, 254, 251, 131, 34,  39,  217, 252,
      172, 21,  0,   0,   0,   0,   2,   4,   0,   0,   0,   0,   0,   0,   0,
      0,   5,   126, 248, 254, 254, 246, 206, 23,  1,   37,  217, 250, 129, 5,
      0,   0,   8,   34,  82,  113, 32,  0,   0,   0,   0,   0,   0,   3,   36,
      177, 252, 253, 221, 128, 46,  1,   0,   37,  217, 250, 129, 14,  32,  51,
      127, 204, 233, 241, 113, 4,   0,   0,   0,   0,   3,   123, 231, 253, 251,
      163, 35,  1,   0,   4,   4,   41,  217, 254, 236, 222, 245, 250, 251, 250,
      250, 229, 109, 3,   0,   0,   0,   3,   67,  222, 254, 252, 191, 55,  38,
      37,  51,  125, 127, 146, 236, 254, 254, 254, 252, 243, 177, 129, 127, 81,
      20,  0,   0,   0,   0,   34,  175, 254, 254, 252, 193, 173, 215, 217, 222,
      249, 250, 250, 254, 251, 233, 216, 172, 113, 34,  5,   4,   2,   0,   0,
      0,   0,   3,   111, 243, 254, 255, 254, 252, 252, 254, 252, 250, 249, 233,
      217, 217, 170, 84,  38,  21,  4,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   33,  158, 222, 240, 222, 217, 172, 127, 82,  39,  37,  21,  5,   4,
      2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,
      20,  50,  100, 50,  37,  21,  5,   2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0};
  ASSERT_EQ(model.test(letter_a), 1);
}

TEST(GeneralSuite, test_2) {
  s21::ModelGraph model(2, 0.1, 26);

  model.train_k_fold(5, "../datasets/emnist-letters-train.csv");
  model.save_weights("graph_weights.mlp");
  int letter_a[784] = {
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   4,   21,  20,  1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   33,  115,
      172, 153, 20,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   8,   127, 221, 253, 254, 215,
      37,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   1,   22,  95,  244, 254, 254, 247, 154, 20,  0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   35,  159, 232, 254, 254, 244, 163, 22,  1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      35,  163, 245, 254, 253, 221, 127, 33,  0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   35,  219, 253,
      254, 246, 127, 33,  1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   7,   47,  164, 253, 254, 247, 164,
      10,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   10,  91,  207, 247, 254, 254, 220, 52,  0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   123, 221, 253, 254, 254, 252, 172, 21,  0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   20,
      52,  231, 254, 254, 254, 254, 245, 115, 4,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   34,  96,  218, 250, 254,
      246, 196, 237, 254, 217, 39,  0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   3,   36,  202, 234, 253, 254, 244, 163, 73,
      218, 254, 215, 37,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   2,   65,  175, 253, 254, 254, 251, 131, 34,  39,  217, 252,
      172, 21,  0,   0,   0,   0,   2,   4,   0,   0,   0,   0,   0,   0,   0,
      0,   5,   126, 248, 254, 254, 246, 206, 23,  1,   37,  217, 250, 129, 5,
      0,   0,   8,   34,  82,  113, 32,  0,   0,   0,   0,   0,   0,   3,   36,
      177, 252, 253, 221, 128, 46,  1,   0,   37,  217, 250, 129, 14,  32,  51,
      127, 204, 233, 241, 113, 4,   0,   0,   0,   0,   3,   123, 231, 253, 251,
      163, 35,  1,   0,   4,   4,   41,  217, 254, 236, 222, 245, 250, 251, 250,
      250, 229, 109, 3,   0,   0,   0,   3,   67,  222, 254, 252, 191, 55,  38,
      37,  51,  125, 127, 146, 236, 254, 254, 254, 252, 243, 177, 129, 127, 81,
      20,  0,   0,   0,   0,   34,  175, 254, 254, 252, 193, 173, 215, 217, 222,
      249, 250, 250, 254, 251, 233, 216, 172, 113, 34,  5,   4,   2,   0,   0,
      0,   0,   3,   111, 243, 254, 255, 254, 252, 252, 254, 252, 250, 249, 233,
      217, 217, 170, 84,  38,  21,  4,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   33,  158, 222, 240, 222, 217, 172, 127, 82,  39,  37,  21,  5,   4,
      2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,
      20,  50,  100, 50,  37,  21,  5,   2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0};
  ASSERT_EQ(model.test(letter_a), 1);
}

TEST(GeneralSuite, test_3) {
  s21::ModelGraph model(2, 0.1, 26);

  model.train(3, "../datasets/emnist-letters-train.csv",
              "../datasets/emnist-letters-test.csv");
  std::vector<std::vector<double>> result =
      model.partial_testing(1, "../datasets/emnist-letters-test.csv");
  GTEST_ASSERT_GT(result[26][0], 0.7);
}

TEST(GeneralSuite, test_4) {
  s21::ModelGraph model("graph_weights.mlp");
  std::vector<std::vector<double>> result =
      model.partial_testing(1, "../datasets/emnist-letters-test.csv");
  GTEST_ASSERT_GT(result[26][0], 0.7);
}

TEST(GeneralSuite, test_5) {
  s21::ModelMatrix model(2, 0.1, 26);

  model.train(3, "../datasets/emnist-letters-train.csv",
              "../datasets/emnist-letters-test.csv");
  int letter_a[784] = {
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   4,   21,  20,  1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   33,  115,
      172, 153, 20,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   8,   127, 221, 253, 254, 215,
      37,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   1,   22,  95,  244, 254, 254, 247, 154, 20,  0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   35,  159, 232, 254, 254, 244, 163, 22,  1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      35,  163, 245, 254, 253, 221, 127, 33,  0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   35,  219, 253,
      254, 246, 127, 33,  1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   7,   47,  164, 253, 254, 247, 164,
      10,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   10,  91,  207, 247, 254, 254, 220, 52,  0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   123, 221, 253, 254, 254, 252, 172, 21,  0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   20,
      52,  231, 254, 254, 254, 254, 245, 115, 4,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   34,  96,  218, 250, 254,
      246, 196, 237, 254, 217, 39,  0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   3,   36,  202, 234, 253, 254, 244, 163, 73,
      218, 254, 215, 37,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   2,   65,  175, 253, 254, 254, 251, 131, 34,  39,  217, 252,
      172, 21,  0,   0,   0,   0,   2,   4,   0,   0,   0,   0,   0,   0,   0,
      0,   5,   126, 248, 254, 254, 246, 206, 23,  1,   37,  217, 250, 129, 5,
      0,   0,   8,   34,  82,  113, 32,  0,   0,   0,   0,   0,   0,   3,   36,
      177, 252, 253, 221, 128, 46,  1,   0,   37,  217, 250, 129, 14,  32,  51,
      127, 204, 233, 241, 113, 4,   0,   0,   0,   0,   3,   123, 231, 253, 251,
      163, 35,  1,   0,   4,   4,   41,  217, 254, 236, 222, 245, 250, 251, 250,
      250, 229, 109, 3,   0,   0,   0,   3,   67,  222, 254, 252, 191, 55,  38,
      37,  51,  125, 127, 146, 236, 254, 254, 254, 252, 243, 177, 129, 127, 81,
      20,  0,   0,   0,   0,   34,  175, 254, 254, 252, 193, 173, 215, 217, 222,
      249, 250, 250, 254, 251, 233, 216, 172, 113, 34,  5,   4,   2,   0,   0,
      0,   0,   3,   111, 243, 254, 255, 254, 252, 252, 254, 252, 250, 249, 233,
      217, 217, 170, 84,  38,  21,  4,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   33,  158, 222, 240, 222, 217, 172, 127, 82,  39,  37,  21,  5,   4,
      2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,
      20,  50,  100, 50,  37,  21,  5,   2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0};
  ASSERT_EQ(model.test(letter_a), 1);
}

TEST(GeneralSuite, test_6) {
  s21::ModelMatrix model(2, 0.1, 26);

  model.train_k_fold(5, "../datasets/emnist-letters-train.csv");
  model.save_weights("matrix_weights.mlp");
  int letter_a[784] = {
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   3,   21,  32,  32,  7,
      1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   8,   22,  82,  114, 113, 33,  8,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   4,   22,  122, 170, 232, 245, 243, 159, 79,  3,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      3,   24,  59,  195, 230, 249, 250, 251, 207, 127, 8,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   8,   79,  171,
      209, 248, 245, 177, 143, 191, 243, 204, 32,  4,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   1,   35,  91,  219, 250, 247, 207,
      159, 37,  20,  143, 241, 204, 32,  4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   7,   91,  163, 246, 246, 221, 127, 79,  11,
      22,  172, 231, 172, 21,  2,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   9,   46,  207, 243, 232, 159, 91,  10,  3,   9,   50,  219,
      204, 116, 4,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   22,  83,  231, 245, 176, 79,  33,  1,   0,   22,  84,  231, 170, 82,
      2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   2,   82,
      170, 248, 222, 53,  3,   0,   1,   9,   95,  175, 217, 79,  22,  0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   5,   127, 216, 243,
      202, 32,  0,   0,   22,  79,  218, 238, 131, 11,  1,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   9,   140, 221, 220, 159, 20,
      0,   1,   47,  127, 242, 238, 111, 12,  3,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   4,   32,  204, 241, 143, 54,  1,   9,   35,
      164, 221, 253, 250, 211, 127, 79,  10,  3,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   4,   36,  214, 245, 142, 52,  2,   35,  91,  219, 246,
      255, 254, 246, 207, 159, 47,  20,  0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   2,   21,  170, 229, 200, 113, 39,  163, 219, 250, 246, 222, 218,
      222, 245, 244, 190, 111, 4,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   2,   65,  109, 110, 79,  147, 244, 244, 175, 128, 51,  39,  51,  133,
      189, 231, 172, 21,  2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      18,  32,  33,  35,  155, 240, 218, 96,  47,  9,   5,   9,   65,  145, 241,
      204, 32,  4,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   3,   65,  111, 77,  9,   1,   0,   0,   0,   37,  127, 241, 204, 32,
      4,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      18,  32,  20,  1,   0,   0,   0,   0,   37,  127, 229, 172, 21,  2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   51,  140, 200, 115, 4,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   4,   112, 193, 126, 46,  0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   4,   117, 179, 79,  22,  0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   2,
      49,  58,  8,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   13,  14,
      1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0};
  ASSERT_EQ(model.test(letter_a), 1);
}

TEST(GeneralSuite, test_7) {
  s21::ModelMatrix model(2, 0.1, 26);

  model.train(3, "../datasets/emnist-letters-train.csv",
              "../datasets/emnist-letters-test.csv");
  std::vector<std::vector<double>> result =
      model.partial_testing(1, "../datasets/emnist-letters-test.csv");
  GTEST_ASSERT_GT(result[26][0], 0.7);
}

TEST(GeneralSuite, test_8) {
  s21::ModelMatrix model("matrix_weights.mlp");
  std::vector<std::vector<double>> result =
      model.partial_testing(1, "../datasets/emnist-letters-test.csv");
  GTEST_ASSERT_GT(result[26][0], 0.7);
}

int main(int argc, char **argv) {
  testing::InitGoogleTest(&argc, argv);
  return RUN_ALL_TESTS();
}
